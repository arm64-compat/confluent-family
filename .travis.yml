language: java

dist: focal

os: linux

cache:
  directories:
  - "$HOME/.m2"

addons:
  apt:
    packages:
    - maven
    - python3.9

env:
  global:
  - DOCKER_REGISTRY=ghcr.io
  - DOCKER_REPOSITORY=arm64-compat
  - ZULU_JDK_VERSION=11.0.15-1
  - secure: "mINNQvWVcdaB0uej0WCFW+wHe3rUMYJ4BW2nExB/t0U2CxEJXnsNWmu+Bl7su1eOCuu6KUe/9za+wY2PzDU6rsX7z37Pnz9K/Lgg5GoLQz/wPWmpHbt+G7K2aTxjuIvN4aMGrk7tI5J5wSKwtmvfGJg9lXhyULo4N2X7gWfaMNmqwmU0P29DWDzh+t7s2HgJcL6ADJi2Tc2yha1lP/8YuvHQ8me7VG7jNOv7QxhCU8fY3cmn5ubhQQzAP2NWRoB0/lGffT2wW6iX7DPon5Cghxgn1TwvPnkalK8hTm00uvHE0WFSDRWG0pvP5/6hCFFA4y5HAPfs7DHeWygScl37eh1T7fldM+JOVBTWKZY92bujP7pNjxCZ3ho3pDf2FeYPihxILA0cG/ypBoEuCSKw76svX+AesqPmQwyLnPjC+TeM5K2iJqCbCFegNLAUtNKrkfq0D2GVd5KqF3TT4eScq2Dcy2jELLYddDFijVIAZmDSZAEXbPxvg0bw7XBcqbsdiUL3YoekyyIENaUnuTDCBLV8B0El6M/PlW7KrHG0NNUJWEj1JZOb0mgiH74QVwlqs8yXCUref8GX3lZJ2X/VWXhtuDKRZva9lVyR0hGaocuPxvatrk5GwmCG3T+tc0ZlSB5VAkULjY9XE7VDx9to25PH+cYbX4KfnfRu/sK9ZOU="
  - secure: "h86uqOC8/ALi7yohhbG1ZxaBqX8yn7SlgM5To0EktH3wzu/HRyXgnsQ9kdQinUNnj99gPz5Y84/0TsqYkt7ym7DzDFBc4CN11NxKjlF6cCpW0md+C5SR3Lu7csHpTSeykKJeQl2txtFHtnA0MyyF27GZg7wuOiE7HTVZxK1W/J3RkYJfJ0+qw3By+30YXnxg33E64PHyK69xi6z/QJ9V0RsiG6wB//Ejy1XFMyiduz9kHJExIL3I/HSRlU0BIeACIM1t9ICAk5PQajIQ7f2u0EoLgD93zdIdSogaMo6IxlzmHncjJYPSH6MU0kUK1eNJ3x9O81i/3g6vE+40gWLtqTeKSV/UubjHJJEAJ7suIn9UQYME7Txvnl0gggdpkF5CmtU7i8gNrTlUes9Epyo15PAG/8mnxNdVPxOn93ADLbkT81wb9XpjBxvcOKvbR4QLud5gaWJrb3eZq6JANkj3I+je18qZR0yYdcz/qB+Lv3IQker0nFvjLeDm/RkMRsudHenAsHrv18QU3liDKaxueMdtxjjhVixs/t8Y8/JNMeE+idfBFaS0RhFmERLDtPmYjtajVex4SfS5oK+gOpy3rtxmDgSK8Z2YnMYAnNVpeXAg90L0/j4Y88rW2OLRe8LeBUW0oNYIEW2raqPIyRvBfpyGBLjohNmZTsRQmOhhwzE="


before_script:
- source ./set-env.sh
- pip install tox

before_deploy:
- echo $GITHUB_TOKEN | docker login -u $GITHUB_USERNAME --password-stdin $DOCKER_REGISTRY

stages:
- build-common
- build-1
- build-2

services:
- docker

jobs:
  include:
  - &build-image-job
    name: "ARM64 common-docker image build"
    stage: build-common
    arch: arm64
    if: false
    jdk: openjdk11
    env:
      BUILD_DIR: common-docker
    script:
    - $MVN -f $BUILD_DIR/pom.xml -Pdocker clean package
    deploy: &push_image
      provider: script
      on:
        all_branches: true
      script: ./push-images.sh
  - <<: *build-image-job
    name: "ARM64 schema-registry-images build"
    stage: build-1
    arch: arm64
    env:
      BUILD_DIR: schema-registry-images
  - <<: *build-image-job
    name: "ARM64 ksql-images build"
    stage: build-1
    arch: arm64
    env:
      BUILD_DIR: ksql-images
  - <<: *build-image-job
    name: "ARM64 kafka-images build"
    stage: build-1
    arch: arm64
    env:
      BUILD_DIR: kafka-images
  - <<: *build-image-job
    name: "ARM64 kafka-rest-images build"
    stage: build-1
    arch: arm64
    env:
      BUILD_DIR: kafka-rest-images
  - <<: *build-image-job
    name: "ARM64 control-center-images build"
    stage: build-1
    arch: arm64
    env:
      BUILD_DIR: control-center-images
  - <<: *build-image-job
    name: "ARM64 kafka-replicator-images build"
    stage: build-2
    arch: arm64    
    env:
      BUILD_DIR: kafka-replicator-images
  - <<: *build-image-job
    name: "AMD64 common-docker image build"
    stage: build-common
    if: true
    arch: amd64
  - <<: *build-image-job
    name: "AMD64 schema-registry-images build"
    stage: build-1
    if: true
    arch: amd64
    env:
      BUILD_DIR: schema-registry-images
  - <<: *build-image-job
    name: "AMD64 ksql-images build"
    stage: build-1
    if: true
    arch: amd64
    env:
      BUILD_DIR: ksql-images
  - <<: *build-image-job
    name: "AMD64 kafka-images build"
    stage: build-1
    if: true
    arch: amd64
    env:
      BUILD_DIR: kafka-images
  - <<: *build-image-job
    name: "AMD64 kafka-rest-images build"
    stage: build-1
    if: true
    arch: amd64
    env:
      BUILD_DIR: kafka-rest-images
  - <<: *build-image-job
    name: "AMD64 control-center-images build"
    stage: build-1
    if: true
    arch: amd64
    env:
      BUILD_DIR: control-center-images
  - <<: *build-image-job
    name: "AMD64 kafka-replicator-images build"
    stage: build-2
    if: true
    arch: amd64
    env:
      BUILD_DIR: kafka-replicator-images