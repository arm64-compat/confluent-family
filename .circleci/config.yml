version: 2.1

jobs:
  build-image:
    parameters:
      module: &module-parameter
        description: module to build
        type: string
      build_platform:
        description: build_platform - arm / amd
        type: string
    environment: &common-env
      JAVA_TOOL_OPTIONS: -Dhttps.protocols=TLSv1.2
      DOCKER_REGISTRY: ghcr.io
      DOCKER_REPOSITORY: arm64-compat
      ZULU_JDK_VERSION: 11.0.15-1
    machine:
      image: ubuntu-2004:202101-01
    resource_class: << parameters.build_platform >>
    steps:
    - checkout
    - run: &checkout-submodule
        name: Checkout Submodule
        command: git submodule update --init -- << parameters.module >>
    - restore_cache:
        key: m2-{{ checksum "<< parameters.module >>/pom.xml" }}
    - run:
        name: Install tox for testing
        command: pip install tox
    - run:
        name: Build
        command: ./build-images.sh << parameters.module >>
    - save_cache:
        key: m2-{{ checksum "<< parameters.module >>/pom.xml" }}
        paths:
        - ~/.m2
    - when:
        condition:
          equal: [ main, << pipeline.git.branch >> ]
        steps:
        - run: &docker-login
            name: Docker Login
            command: echo $GITHUB_TOKEN | docker login -u $GITHUB_USERNAME --password-stdin $DOCKER_REGISTRY
        - run:
            name: Deploy
            command: ./push-images.sh << parameters.module >>

  publish-manifest:
    parameters:
      module: *module-parameter
    environment: *common-env
    docker:
    - image: cimg/openjdk:11.0.13
    steps:
    - checkout
    - setup_remote_docker:
        version: 20.10.11
    - run: *checkout-submodule
    - run: *docker-login
    - run:
        name: Publish Manifest
        command: |
          source ./set-env.sh << parameters.module >>
          find << parameters.module >> -type f -name '*Dockerfile.ubi8' -exec ./create-manifest.sh {} \;

workflows:
  workflow:
    jobs:
    - build-image:
        name: build-<< matrix.module >>-<< matrix.build_platform >>
        matrix:
          parameters:
            module:
            - common-docker
            build_platform: &cpu-platforms
            - arm.medium
            - medium
    - build-image:
        name: build-<< matrix.module >>-<< matrix.build_platform >>
        matrix:
          parameters:
            module:
            - schema-registry-images
            - kafka-images
            - kafka-rest-images
            - control-center-images
            - ksql-images
            build_platform: *cpu-platforms
        requires:
        - build-common-docker-<< matrix.build_platform >>
    - build-image:
        name: build-<<matrix.module >>-<< matrix.build_platform >>
        matrix:
          parameters:
            module:
            - kafka-replicator-images
            build_platform: *cpu-platforms
        requires:
        - build-kafka-images-<< matrix.build_platform >>
    - publish-manifest:
        name: publish-manifest-<< matrix.module >>
        matrix:
          parameters:
            module:
            - common-docker
            - schema-registry-images
            - kafka-images
            - kafka-rest-images
            - control-center-images
            - ksql-images
            - kafka-replicator-images
        requires:
        - build-<< matrix.module >>-arm.medium
        - build-<< matrix.module >>-medium
        filters:
          branches:
            only:
            - main
